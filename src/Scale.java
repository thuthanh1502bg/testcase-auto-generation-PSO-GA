/*
 * This code was generated by ojc.
 */
import GeneticAlgorithm.InstrumentCode.*;
import java.util.*;


public class Scale
{

    int width;

    int height;

    Point point;

    public Scale( Point point )
    {
        trace.add( new java.lang.Integer( 1 ) );
        this.point = point;
        width = point.getX();
        height = point.getY();
    }

    public Scale( int width, int height )
    {
        trace.add( new java.lang.Integer( 2 ) );
        if (width < 0) {
            trace.add( new java.lang.Integer( 3 ) );
            width = 1;
        } else {
            trace.add( new java.lang.Integer( 4 ) );
        }
        if (height < 0) {
            trace.add( new java.lang.Integer( 5 ) );
            height = 1;
        } else {
            trace.add( new java.lang.Integer( 6 ) );
        }
        this.width = width;
        this.height = height;
    }

    public Scale()
    {
        trace.add( new java.lang.Integer( 7 ) );
        this.width = 1;
        this.height = 1;
    }

    public void changeState()
    {
        trace.add( new java.lang.Integer( 8 ) );
        int temp = width;
        width = height;
        height = temp;
    }

    public int getWidth()
    {
        trace.add( new java.lang.Integer( 9 ) );
        return width;
    }

    public void setWidth( int width )
    {
        trace.add( new java.lang.Integer( 10 ) );
        this.width = width;
    }

    public int getHeight()
    {
        trace.add( new java.lang.Integer( 11 ) );
        return height;
    }

    public void setHeight( int height )
    {
        trace.add( new java.lang.Integer( 12 ) );
        this.height = height;
    }

    
    static java.util.Set trace = new java.util.HashSet();

    
    public static void newTrace()
    {
        trace = new java.util.HashSet();
    }

    
    public static java.util.Set getTrace()
    {
        return trace;
    }

}
